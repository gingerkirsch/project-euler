/** Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  * By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  * find the sum of the even-valued terms. */

val threshold = 6000000l

def fibonacci(threshold: Long, curr: Long = 1, next: Long = 2, seq: Stream[Long] = Stream.empty): Stream[Long] = {
  curr match {
    case n if n >= threshold => seq
    case _ => fibonacci(threshold, next, curr + next, seq append Stream(curr))
  }
}

val result = fibonacci(threshold).filter(_ % 2 == 0).foldLeft(0l)(_ + _)

